<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns ="http://www.springframework.org/schema/security"
                   
   xmlns:context ="http://www.springframework.org/schema/context"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   
   xsi:schemaLocation ="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security.xsd">
                        
                        <http auto-config="true" use-expressions="true">
                        <intercept-url pattern="/categoryList" access="hasRole('USER')" />
		<intercept-url pattern="/home" access="hasRole('ADMIN')" />
		<form-login login-page="/login" default-target-url="/" 
		login-processing-url="/perform_login" authentication-failure-url="/login"
		authentication-success-forward-url="/home"/>
		<csrf disabled="true"/>
	      <logout logout-success-url="/login?logout" />
	       </http>

	       <authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource" users-by-username-query="select username,password,enable from User where username=?"
authorities-by-username-query="select username,role from User where username=?"/>

		</authentication-provider>
 	       </authentication-manager>

</beans:beans>

                      